# パスパラメータをキャメルケースに統一して。
openapi: 3.0.1
info:
  version: 1.0.5
  title: life アプリ API
tags:
  - name: 口コミ
  - name: 返信
  - name: お気に入り
  - name: ジャンル
security:
  - Bearer: [ ]
paths:
  /review:
    get:
      tags:
        - 口コミ
      summary: 一覧
      description: 口コミの一覧を取得する
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: number
                      description: "ID"
                      example: 1
                    restaurant_name:
                      type: string
                      description: "飲食店名"
                      example: "なか卯"
                    nearest_station:
                      type: string
                      description: "最寄り駅"
                      example: "新橋"
                    genre:
                      type: string
                      description: "ジャンル"
                      example: "1,2,3"
                    image_url:
                      type: string
                      description: 画像URL
                      example: 'https://~'
                    comment:
                      type: string
                      description: 登録者コメント
                      example: '登録者コメント'
                    is_favorite:
                      type: boolean
                      description: お気に入りフラグ
                      example: true
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    post:
      tags:
        - 口コミ
      summary: 投稿
      description: "口コミを投稿する"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 店名
                  example: 'なか卯'
                nearest_station:
                  type: string
                  description: 最寄り駅
                  example: '新橋'
                genre:
                  type: array
                  description: ジャンル
                  example: '1,2,3'
                website_url:
                  type: string
                  description: 外部サイトURL
                  example: 'htttps://~'
                comment:
                  type: string
                  description: コメント
                  example: 'コメント'
              required:
                - name
                - nearest_station
                - genre
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: "number"
                    description: "ID"
                    example: 1
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
  /review/{id}:
    get:
      tags:
        - 口コミ
      summary: 詳細
      description: "口コミの詳細情報を取得する"
      parameters:
        - in: path
          name: "id"
          description: "ID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: "number"
                    description: "ID"
                    example: 1
                  restaurant_name:
                    type: "string"
                    description: "飲食店名"
                    example: "なか卯"
                  nearest_station:
                    type: string
                    description: "最寄り駅"
                    example: "新橋"
                  genre:
                    type: string
                    description: "ジャンル"
                    example: "1,2,3"
                  user_name:
                    type: string
                    description: "更新ユーザー名"
                    example: "あだち"
                  website_url:
                    type: string
                    description: 外部サイトURL
                    example: 'htttps://~'
                  images:
                    type: "array"
                    items:
                      type: "string"
                      description: "スライドする画像のurl返す"
                    example:
                      - "スライドする画像のurl返す1"
                      - "スライドする画像のurl返す2"
                      - "スライドする画像のurl返す3"
                      - "スライドする画像のurl返す4"
                      - "スライドする画像のurl返す5"
                  comment:
                    type: string
                    description: コメント
                    example: 'コメント'
                  is_favorite:
                    type: boolean
                    description: お気に入りフラグ
                    example: true
                  created_at:
                    type: string
                    description: "作成日"
                    example: "2024-08-02 20:04:34"
                  updated_at:
                    type: string
                    description: "更新日"
                    example: "2024-08-02 21:04:34"
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    put:
      tags:
        - 口コミ
      summary: 編集
      description: "口コミを編集する"
      parameters:
        - in: path
          name: "id"
          description: "ID"
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 店名
                  example: 'なか卯'
                nearest_station:
                  type: string
                  description: 最寄り駅
                  example: '新橋'
                genre:
                  type: string
                  description: ジャンル
                  example: '1,2,3'
                website_url:
                  type: string
                  description: 外部サイトURL
                  example: 'htttps://~'
                comment:
                  type: string
                  description: コメント
                  example: 'コメント'
                user_name:
                  type: string
                  description: 更新ユーザー名
                  example: ”あだち”
              required:
                - name
                - nearest_station
                - genre
                - user_name
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: "number"
                    description: "ID"
                    example: 1
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    delete:
      tags:
        - 口コミ
      summary: 削除
      description: "口コミを削除する"
      parameters:
        - in: path
          name: "ID"
          description: "ID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
  /review/{review_id}/reply:
    get:
      tags:
        - 返信
      summary: 一覧
      description: "返信の一覧を取得する"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    user_name:
                      type: "string"
                      description: "ユーザー名"
                      example: "三浦"
                    comment:
                      type: string
                      description: "コメント"
                      example: "確かにおいしかったです。"
                    created_at:
                      type: string
                      description: "作成日"
                      example: "2024-08-02 20:04:34"
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    post:
      tags:
        - 返信
      summary: 登録
      description: "返信を投稿する"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: コメント
                  example: 'ユーザーのコメント'
              required:
                - comment
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  replies:
                    type: "array"
                    description: "返信"
                    items:
                      type: "object"
                      properties:
                        user_name:
                          type: "string"
                          description: "ユーザー名"
                          example: "三浦"
                        comment:
                          type: string
                          description: "コメント"
                          example: "確かにおいしかったです。"
                        created_at:
                          type: string
                          description: "作成日"
                          example: "2024-08-02 20:04:34"
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
  /review/{review_id}/reply/{reply_id}:
    put:
      tags:
        - 返信
      summary: 編集
      description: "返信を編集する"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
        - in: path
          name: "reply_id"
          description: "返信ID"
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: 返信
                  example: 'ユーザーの返信'
              required:
                - comment
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply_id:
                    type: integer
                    description: 返信ID
                    example: 1
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    delete:
      tags:
        - 返信
      summary: 削除
      description: "返信を削除する"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
        - in: path
          name: "reply_id"
          description: "返信ID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
  /review/{review_id}/favorite:
    post:
      tags:
        - お気に入り
      summary: 登録
      description: "お気に入りする"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  review_id:
                    type: "integer"
                    description: "お気に入り登録された口コミID"
                    example: 1
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
    delete:
      tags:
        - お気に入り
      summary: 解除
      description: "お気に入り解除する"
      parameters:
        - in: path
          name: "review_id"
          description: "口コミID"
          required: true
          schema:
            type: number
            example: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  review_id:
                    type: "integer"
                    description: "お気に入り解除された口コミID"
                    example: 1
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
  /genre:
    get:
      tags:
        - ジャンル
      summary: 一覧
      description: ジャンルの一覧を取得する
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: number
                      description: "ID"
                      example: 1
                    name:
                      type: string
                      description: "ジャンル名"
                      example: "和食"
        '400':
          $ref: "#/components/responses/400Error"
        '401':
          $ref: "#/components/responses/401Error"
        '500':
          $ref: "#/components/responses/500Error"
components:
  securitySchemes:
    Bearer:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      description: LINEアクセストークン
  schemas:
    Error:
      description: エラー
      type: object
      required:
        - message
      properties:
        message:
          description: エラーメッセージ
          type: string
          example: エラーメッセージ内容を記載する
  responses:
    400Error:
      description: '400エラー'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    401Error:
      description: '401エラー'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    500Error:
      description: '500エラー'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
